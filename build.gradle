// build.gradle for Overfile (a java.nio.FileSystem wrapper for Overthere).

defaultTasks 'build'

version = '1.0.0-SNAPSHOT'
group = 'com.xebialabs.overthere'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
  mavenCentral()
  maven {
    url 'http://download.java.net/maven/2/'
  }
  maven {
    url 'https://oss.sonatype.org/content/repositories/releases'
  }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
  compile {
    transitive = false
  }
}

dependencies {
  compile 'com.xebialabs.overthere:overthere:2.4.2'
  compile 'com.google.guava:guava:16.0.1'
  compile 'org.apache.httpcomponents:httpclient:4.3.3'
  compile 'org.apache.httpcomponents:httpcore:4.3.2'
  compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
  testCompile 'org.testng:testng:6.8.8'
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  testCompile('com.xebialabs.cloud:overcast:1.1.7') {
    exclude group: 'org.codehaus.jackson', module: 'jackson-core-asl'
  }
  testCompile 'ch.qos.logback:logback-classic:1.1.2'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

signing {
  required { gradle.taskGraph.hasTask('uploadArchives') }
  sign configurations.archives
}

uploadArchives {
  if(project.hasProperty('sonatypeUsername')) {
    repositories.mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      configuration = configurations.archives

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }
      snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.project {
        name 'NIO Overthere'
        description 'java.nio.file SPI implementation for Overthere.'
        packaging 'jar'
        url 'https://github.com/xebialabs/nio-overthere'
        inceptionYear '2012'

        scm {
          url 'https://github.com/xebialabs/nio-overthere'
        }

        licenses {
          license {
            name 'GPLv2 with XebiaLabs FLOSS License Exception'
            url 'https://github.com/xebialabs/nio-overthere/blob/master/LICENSE'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'vpartington'
            name 'Vincent Partington'
            url 'http://www.xebialabs.com/'
            email 'vpartington@xebialabs.com'
            roles {
              role 'Developer'
            }
          }
          developer {
            id 'hierynomus'
            name 'Jeroen van Erp'
            url 'http://www.xebialabs.com/'
            email 'jvanerp@xebialabs.com'
            roles {
              role 'Developer'
            }
          }
        }
      }
    }
  }
}
